--- # Maltese.Yml

#
# Triangulate a cross with a central point that
# will appear in the same loop multiple times
#
name: maltese

# Default global properties
properties: &globalProperties
  randomDensity: 100
  distinct: false
  showMe: 1
  
# inverted cross
# Example of using labels and yaml anchors together to give input flexibility
points: {
 o  : &o [0, 0],
 u1 : &u1 [0.70710678118654757, 1.70710678118654757],
 u2 : &u2 [0, 1.0],
 u3 : &u3 [-0.70710678118654757, 1.70710678118654757],
 l1 : &l1 [-1.70710678118654757, 0.70710678118654757],
 l2 : &l2 [-1.0, 0.0],
 l3 : &l3 [-1.70710678118654757, -0.70710678118654757],
 d1 : &d1 [-0.70710678118654757, -1.70710678118654757],
 d2 : &d2 [0, -1.0],
 d3 : &d3 [0.70710678118654757, -1.70710678118654757],
 r1 : &r1 [1.70710678118654757, -0.70710678118654757],
 r2 : &r2 [1.0, 0.0],
 r3 : &r3 [1.70710678118654757,  0.70710678118654757],
 a  : [-2, -2],
 c  : [2, -2],
 e  : [2, 2],
 g  : [-2, 2]
}

zones:
  # Define an inverted Maltese cross
  # Standard method
  - boundary: [a, c, e, g]
    holes: [[d3, d2, d1, o, l3, l2, l1, o, u3, u2, u1, o, r3, r2, r1, o]]

  # Define an offset Maltese cross
  # because we are applying an offset use the multipolygon style
  # This has four distinct regions
  - multipolygon: [[[*o, *u1, *u2, *u3]], [[*o, *l1, *l2, *l3]],
  [[*o, *d1, *d2, *d3]], [[*o, *r1, *r2, *r3]]]
    origin: [4, 0]

